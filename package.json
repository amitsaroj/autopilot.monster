{
  "name": "autopilot-monster",
  "version": "1.0.0",
  "description": "AI Agents & Automation Marketplace - Backend Microservices",
  "private": true,
  "workspaces": [
    "apps/*",
    "services/*",
    "shared/*"
  ],
  "scripts": {
    "start": "./start-dev.sh",
    "stop": "./stop-dev.sh",
    "dev": "./start-dev.sh",
    "dev:gateway": "cd services/api-gateway && PORT=4000 npm run start:dev",
    "dev:auth": "cd services/auth-service && PORT=3002 npm run start:dev",
    "dev:catalog": "cd services/catalog-service && PORT=3003 npm run start:dev",
    "dev:payment": "cd services/payment-service && PORT=3004 npm run start:dev",
    "dev:user": "cd services/user-service && PORT=3005 npm run start:dev",
    "dev:vendor": "cd services/vendor-service && PORT=3006 npm run start:dev",
    "dev:admin": "cd services/admin-service && PORT=3007 npm run start:dev",
    "dev:content": "cd services/content-service && PORT=3008 npm run start:dev",
    "dev:frontend": "cd frontend && PORT=3000 npm run dev",
    "build": "npm run build:services && npm run build:frontend",
    "build:services": "concurrently \"npm run build:gateway\" \"npm run build:auth\" \"npm run build:catalog\" \"npm run build:payment\" \"npm run build:user\" \"npm run build:vendor\" \"npm run build:admin\" \"npm run build:content\"",
    "build:gateway": "cd services/api-gateway && npm run build",
    "build:auth": "cd services/auth-service && npm run build",
    "build:catalog": "cd services/catalog-service && npm run build",
    "build:payment": "cd services/payment-service && npm run build",
    "build:user": "cd services/user-service && npm run build",
    "build:vendor": "cd services/vendor-service && npm run build",
    "build:admin": "cd services/admin-service && npm run build",
    "build:content": "cd services/content-service && npm run build",
    "build:frontend": "cd frontend && npm run build",
    "test": "npm run test:services && npm run test:frontend",
    "test:services": "concurrently \"npm run test:gateway\" \"npm run test:auth\" \"npm run test:catalog\" \"npm run test:payment\" \"npm run test:user\" \"npm run test:vendor\" \"npm run test:admin\" \"npm run test:content\"",
    "test:gateway": "cd services/api-gateway && npm run test",
    "test:auth": "cd services/auth-service && npm run test",
    "test:catalog": "cd services/catalog-service && npm run test",
    "test:payment": "cd services/payment-service && npm run test",
    "test:user": "cd services/user-service && npm run test",
    "test:vendor": "cd services/vendor-service && npm run test",
    "test:admin": "cd services/admin-service && npm run test",
    "test:content": "cd services/content-service && npm run test",
    "test:frontend": "cd frontend && npm run test",
    "lint": "npm run lint:services && npm run lint:frontend",
    "lint:services": "concurrently \"npm run lint:gateway\" \"npm run lint:auth\" \"npm run lint:catalog\" \"npm run lint:payment\" \"npm run lint:user\" \"npm run lint:vendor\" \"npm run lint:admin\" \"npm run lint:content\"",
    "lint:gateway": "cd services/api-gateway && npm run lint",
    "lint:auth": "cd services/auth-service && npm run lint",
    "lint:catalog": "cd services/catalog-service && npm run lint",
    "lint:payment": "cd services/payment-service && npm run lint",
    "lint:user": "cd services/user-service && npm run lint",
    "lint:vendor": "cd services/vendor-service && npm run lint",
    "lint:admin": "cd services/admin-service && npm run lint",
    "lint:content": "cd services/content-service && npm run lint",
    "lint:frontend": "cd frontend && npm run lint",
    "docker:up": "docker compose up -d",
    "docker:down": "docker compose down",
    "docker:logs": "docker compose logs -f",
    "docker:build": "docker compose build",
    "docker:restart": "docker compose restart",
    "clean": "npm run clean:services && npm run clean:frontend",
    "clean:services": "find services -name 'dist' -type d -exec rm -rf {} + 2>/dev/null || true",
    "clean:frontend": "cd frontend && rm -rf .next 2>/dev/null || true",
    "install:all": "npm install && cd frontend && npm install && cd .. && find services -name 'package.json' -execdir npm install \\;",
    "logs": "tail -f logs/*.log",
    "health": "curl -s http://localhost:4000/health && echo ''",
    "docs": "echo 'API Documentation: http://localhost:4000/api-docs'"
  },
  "devDependencies": {
    "concurrently": "^8.2.2",
    "@types/node": "^20.11.17",
    "typescript": "^5.3.3"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  }
}
